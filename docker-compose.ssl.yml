version: '3.8'

services:
  # –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö PostgreSQL
  db:
    image: postgres:15-alpine
    container_name: streamcash_db
    restart: unless-stopped
    environment:
      POSTGRES_DB: streamcash_dev
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: streamcash_dev_2024
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - streamcash_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Redis –¥–ª—è –∫—ç—à–∏—Ä–æ–≤–∞–Ω–∏—è
  redis:
    image: redis:7-alpine
    container_name: streamcash_redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - streamcash_network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # RabbitMQ –¥–ª—è –æ–±–º–µ–Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏—è–º–∏ –º–µ–∂–¥—É –º–∏–∫—Ä–æ—Å–µ—Ä–≤–∏—Å–∞–º–∏
  rabbitmq:
    image: rabbitmq:3.12-management-alpine
    container_name: streamcash_rabbitmq
    restart: unless-stopped
    environment:
      RABBITMQ_DEFAULT_USER: streamcash
      RABBITMQ_DEFAULT_PASS: streamcash_dev_2024
    ports:
      - "5672:5672"
      - "15672:15672"
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    networks:
      - streamcash_network
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "check_running"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Poste.io - –ø–æ—á—Ç–æ–≤—ã–π —Å–µ—Ä–≤–µ—Ä
  mail:
    image: analogic/poste.io
    container_name: streamcash_mail
    restart: unless-stopped
    hostname: mail.xn--h1aefoeg0czb.xn--p1ai
    environment:
      - HTTPS=OFF
      - DISABLE_CLAMAV=true
      - VIRTUAL_HOST=mail.—Å—Ç—Ä–∏–º–∫—ç—à.—Ä—Ñ
      - VIRTUAL_PORT=80
    ports:
      - "8090:80"   # HTTP –∞–¥–º–∏–Ω–∫–∞
      - "25:25"     # SMTP
      - "587:587"   # SMTP submission
      - "993:993"   # IMAPS
      - "995:995"   # POP3S
    volumes:
      - mail_data:/data
      - /etc/letsencrypt:/etc/letsencrypt:ro
    networks:
      - streamcash_network
    profiles:
      - production

  # MailHog - –¥–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏ –∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
  mailhog:
    image: mailhog/mailhog:latest
    container_name: streamcash_mailhog
    restart: unless-stopped
    ports:
      - "1025:1025"  # SMTP
      - "8025:8025"  # Web UI
    networks:
      - streamcash_network
    profiles:
      - dev

  # API Gateway - –æ—Å–Ω–æ–≤–Ω–æ–π –≤—Ö–æ–¥–Ω–æ–π –ø—É–Ω–∫—Ç
  api-gateway:
    build:
      context: ./backend
      dockerfile: Dockerfile.dev
    container_name: streamcash_api_gateway
    restart: unless-stopped
    ports:
      - "8000:8000"
    extra_hosts:
      - "securepay.tbank.ru:185.178.208.12"
      - "rest-api-test.tinkoff.ru:185.178.208.12"
    environment:
      - DATABASE_URL=postgresql://postgres:streamcash_dev_2024@db:5432/streamcash_dev
      - REDIS_URL=redis://redis:6379
      - RABBITMQ_URL=amqp://streamcash:streamcash_dev_2024@rabbitmq:5672/
      - SECRET_KEY=streamcash-dev-secret-key-super-long-and-secure-2024
      - ALGORITHM=HS256
      - ACCESS_TOKEN_EXPIRE_MINUTES=10080
      - FRONTEND_URL=https://—Å—Ç—Ä–∏–º–∫—ç—à.—Ä—Ñ
      - API_URL=https://—Å—Ç—Ä–∏–º–∫—ç—à.—Ä—Ñ
      - API_V1_STR=/api/v1
      - DEBUG=true
      - ENVIRONMENT=development
      - YOOKASSA_SHOP_ID=test_shop_id
      - YOOKASSA_SECRET_KEY=test_secret_key
      - SBERBANK_USERNAME=${SBERBANK_USERNAME:-}
      - SBERBANK_PASSWORD=${SBERBANK_PASSWORD:-}
      - TINKOFF_TERMINAL_KEY=${TINKOFF_TERMINAL_KEY:-}
      - TINKOFF_SECRET_KEY=${TINKOFF_SECRET_KEY:-}
      - TBANK_TERMINAL=${TBANK_TERMINAL:-1753782172001}
      - TBANK_PASSWORD=${TBANK_PASSWORD:-KqU8ItCGM#s&Cqn*}
      - TBANK_SECRET_KEY=${TBANK_SECRET_KEY:-KqU8ItCGM#s&Cqn*}
      - TBANK_MERCHANT_ID=${TBANK_MERCHANT_ID:-200000001669463}
      - TBANK_TERMINAL_ID=${TBANK_TERMINAL_ID:-25786674}
      - EMAIL_HOST=mail.—Å—Ç—Ä–∏–º–∫—ç—à.—Ä—Ñ
      - EMAIL_PORT=587
      - EMAIL_HOST_USER=no-reply@xn--h1aefoeg0czb.xn--p1ai
      - EMAIL_HOST_PASSWORD=UfjuQqDoCk
      - EMAIL_USE_TLS=true
      - ALERTS_SERVICE_URL=http://alerts-service:8000
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
      alerts-service:
        condition: service_started
    volumes:
      - ./backend:/app
      - ./backend/static:/app/static
    networks:
      - streamcash_network
    command: >
      sh -c "
        echo 'üöÄ –ó–∞–ø—É—Å–∫ API Gateway...' &&
        alembic upgrade head &&
        cd /app &&
        python3 -m uvicorn services.api-gateway.main:app --host 0.0.0.0 --port 8000 --reload
      "

  # –ú–∏–∫—Ä–æ—Å–µ—Ä–≤–∏—Å —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –¥–æ–Ω–∞—Ç–∞–º–∏
  donations-service:
    build:
      context: ./backend
      dockerfile: Dockerfile.dev
    container_name: streamcash_donations_service
    restart: unless-stopped
    environment:
      - DATABASE_URL=postgresql://postgres:streamcash_dev_2024@db:5432/streamcash_dev
      - RABBITMQ_URL=amqp://streamcash:streamcash_dev_2024@rabbitmq:5672/
      - SECRET_KEY=streamcash-dev-secret-key-super-long-and-secure-2024
    depends_on:
      db:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    volumes:
      - ./backend:/app
    networks:
      - streamcash_network
    command: >
      sh -c "
        echo 'üéØ –ó–∞–ø—É—Å–∫ Donations Service...' &&
        while ! nc -z rabbitmq 5672; do sleep 2; done &&
        python3 /app/services/donations/main.py
      "

  # –ú–∏–∫—Ä–æ—Å–µ—Ä–≤–∏—Å –æ–±—Ä–∞–±–æ—Ç–∫–∏ –ø–ª–∞—Ç–µ–∂–µ–π
  payments-service:
    build:
      context: ./backend
      dockerfile: Dockerfile.dev
    container_name: streamcash_payments_service
    restart: unless-stopped
    environment:
      - DATABASE_URL=postgresql://postgres:streamcash_dev_2024@db:5432/streamcash_dev
      - RABBITMQ_URL=amqp://streamcash:streamcash_dev_2024@rabbitmq:5672/
      - SECRET_KEY=streamcash-dev-secret-key-super-long-and-secure-2024
      - YOOKASSA_SHOP_ID=test_shop_id
      - YOOKASSA_SECRET_KEY=test_secret_key
      - TBANK_TERMINAL=${TBANK_TERMINAL:-1753782172001}
      - TBANK_SECRET_KEY=${TBANK_SECRET_KEY:-KqU8ItCGM#s&Cqn*}
      - FRONTEND_URL=https://—Å—Ç—Ä–∏–º–∫—ç—à.—Ä—Ñ
      - API_URL=https://—Å—Ç—Ä–∏–º–∫—ç—à.—Ä—Ñ
    depends_on:
      db:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    volumes:
      - ./backend:/app
    networks:
      - streamcash_network
    command: >
      sh -c "
        echo 'üí≥ –ó–∞–ø—É—Å–∫ Payments Service...' &&
        while ! nc -z rabbitmq 5672; do sleep 2; done &&
        python3 /app/services/payments/main.py
      "

  # –ú–∏–∫—Ä–æ—Å–µ—Ä–≤–∏—Å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
  notifications-service:
    build:
      context: ./backend
      dockerfile: Dockerfile.dev
    container_name: streamcash_notifications_service
    restart: unless-stopped
    environment:
      - DATABASE_URL=postgresql://postgres:streamcash_dev_2024@db:5432/streamcash_dev
      - RABBITMQ_URL=amqp://streamcash:streamcash_dev_2024@rabbitmq:5672/
      - SECRET_KEY=streamcash-dev-secret-key-super-long-and-secure-2024
    depends_on:
      db:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    volumes:
      - ./backend:/app
    networks:
      - streamcash_network
    command: >
      sh -c "
        echo 'üîî –ó–∞–ø—É—Å–∫ Notifications Service...' &&
        while ! nc -z rabbitmq 5672; do sleep 2; done &&
        python3 /app/services/notifications/main.py
      "

  # –ú–∏–∫—Ä–æ—Å–µ—Ä–≤–∏—Å –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–ª–∞—Ç–µ–∂–µ–π
  payment-checker-service:
    build:
      context: ./backend
      dockerfile: Dockerfile.dev
    container_name: streamcash_payment_checker_service
    restart: unless-stopped
    environment:
      - DATABASE_URL=postgresql://postgres:streamcash_dev_2024@db:5432/streamcash_dev
      - RABBITMQ_URL=amqp://streamcash:streamcash_dev_2024@rabbitmq:5672/
      - SECRET_KEY=streamcash-dev-secret-key-super-long-and-secure-2024
      - TBANK_TERMINAL=${TBANK_TERMINAL:-1753782172001}
      - TBANK_SECRET_KEY=${TBANK_SECRET_KEY:-KqU8ItCGM#s&Cqn*}
      - PAYMENT_CHECK_INTERVAL=10
    depends_on:
      db:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    volumes:
      - ./backend:/app
    networks:
      - streamcash_network
    command: >
      sh -c "
        echo 'üîç –ó–∞–ø—É—Å–∫ Payment Checker Service...' &&
        while ! nc -z rabbitmq 5672; do sleep 2; done &&
        python3 /app/services/payment-checker/main.py
      "

  # –ú–∏–∫—Ä–æ—Å–µ—Ä–≤–∏—Å —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∞–ª–µ—Ä—Ç–∞–º–∏
  alerts-service:
    build:
      context: ./backend
      dockerfile: Dockerfile.dev
    container_name: streamcash_alerts_service
    restart: unless-stopped
    environment:
      - DATABASE_URL=postgresql://postgres:streamcash_dev_2024@db:5432/streamcash_dev
      - RABBITMQ_URL=amqp://streamcash:streamcash_dev_2024@rabbitmq:5672/
      - SECRET_KEY=streamcash-dev-secret-key-super-long-and-secure-2024
      - FRONTEND_URL=https://—Å—Ç—Ä–∏–º–∫—ç—à.—Ä—Ñ
      - API_URL=https://—Å—Ç—Ä–∏–º–∫—ç—à.—Ä—Ñ
      - UPLOAD_DIR=static/uploads
    depends_on:
      db:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    volumes:
      - ./backend:/app
      - ./backend/static:/app/static
    networks:
      - streamcash_network
    command: >
      sh -c "
        echo 'üîî –ó–∞–ø—É—Å–∫ Alerts Service...' &&
        alembic upgrade head &&
        cd /app &&
        python3 -m uvicorn services.alerts.main:app --host 0.0.0.0 --port 8000 --reload
      "

  # Frontend
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.dev
    container_name: streamcash_frontend
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      - NEXT_PUBLIC_API_URL=https://—Å—Ç—Ä–∏–º–∫—ç—à.—Ä—Ñ/api
    depends_on:
      - api-gateway
    volumes:
      - ./frontend:/app
      - /app/node_modules
      - /app/.next
    networks:
      - streamcash_network
    command: npm run dev

  # Nginx reverse proxy —Å SSL
  nginx:
    image: nginx:alpine
    container_name: streamcash_nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.ssl.conf:/etc/nginx/conf.d/default.conf
      - /etc/letsencrypt:/etc/letsencrypt:ro
    depends_on:
      - api-gateway
      - frontend
    networks:
      - streamcash_network

volumes:
  postgres_data:
  redis_data:
  rabbitmq_data:
  mail_data:

networks:
  streamcash_network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.21.0.0/16
          gateway: 172.21.0.1
    driver_opts:
      com.docker.network.driver.mtu: 1450 