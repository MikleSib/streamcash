version: '3.8'

services:
  # База данных PostgreSQL
  db:
    image: postgres:15-alpine
    container_name: streamcash_dev_db
    restart: unless-stopped
    environment:
      POSTGRES_DB: streamcash_dev
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: streamcash_dev_2024
    ports:
      - "5432:5432"
    volumes:
      - postgres_dev_data:/var/lib/postgresql/data
    networks:
      - streamcash_dev_network

  # Redis для кэширования и очередей
  redis:
    image: redis:7-alpine
    container_name: streamcash_dev_redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_dev_data:/data
    networks:
      - streamcash_dev_network

  # Backend API в режиме разработки
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile.dev
    container_name: streamcash_dev_backend
    restart: unless-stopped
    ports:
      - "8000:8000"
    environment:
      - DATABASE_URL=postgresql://postgres:streamcash_dev_2024@db:5432/streamcash_dev
      - REDIS_URL=redis://redis:6379
      - SECRET_KEY=streamcash-dev-secret-key-super-long-and-secure-2024
      - ALGORITHM=HS256
      - ACCESS_TOKEN_EXPIRE_MINUTES=10080
      - FRONTEND_URL=https://стримкэш.рф
      - API_URL=https://стримкэш.рф/api
      - DEBUG=true
      - ENVIRONMENT=development
      - YOOKASSA_SHOP_ID=test_shop_id
      - YOOKASSA_SECRET_KEY=test_secret_key
    depends_on:
      - db
      - redis
    volumes:
      - ./backend:/app
      - ./backend/static:/app/static
    networks:
      - streamcash_dev_network
    command: >
      sh -c "
        echo 'Waiting for database to be ready...' &&
        while ! nc -z db 5432; do sleep 1; done &&
        echo 'Database is ready!' &&
        alembic upgrade head &&
        uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload
      "

  # Frontend в режиме разработки
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.dev
    container_name: streamcash_dev_frontend
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      - NEXT_PUBLIC_API_URL=https://стримкэш.рф/api
    depends_on:
      - backend
    volumes:
      - ./frontend:/app
      - /app/node_modules
      - /app/.next
    networks:
      - streamcash_dev_network
    command: npm run dev

  # Nginx reverse proxy для разработки
  nginx:
    image: nginx:alpine
    container_name: streamcash_dev_nginx
    restart: unless-stopped
    ports:
      - "80:80"
    volumes:
      - ./nginx/nginx.dev.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - backend
      - frontend
    networks:
      - streamcash_dev_network

volumes:
  postgres_dev_data:
  redis_dev_data:

networks:
  streamcash_dev_network:
    driver: bridge 