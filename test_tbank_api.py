#!/usr/bin/env python3
"""
–¢–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ T-Bank API –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏
"""

import requests
import json
import hashlib
import time
import uuid

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏
API_URL = "http://localhost:8000"
TBANK_TERMINAL = "1753782171950DEMO"
TBANK_SECRET_KEY = "Hs%8cNP6W&hv%3!^"

def test_tbank_init():
    """–¢–µ—Å—Ç —Å–æ–∑–¥–∞–Ω–∏—è –ø–ª–∞—Ç–µ–∂–∞ —á–µ—Ä–µ–∑ –Ω–∞—à API"""
    print("üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ T-Bank API —á–µ—Ä–µ–∑ –Ω–∞—à endpoint...")
    
    # –î–∞–Ω–Ω—ã–µ –¥–ª—è —Ç–µ—Å—Ç–∞
    test_data = {
        "amount": 100,
        "order_id": f"order_{int(time.time() * 1000)}_{uuid.uuid4().hex[:8]}",
        "payment_method": "tbank",
        "description": "–¢–µ—Å—Ç–æ–≤—ã–π –¥–æ–Ω–∞—Ç"
    }
    
    try:
        response = requests.post(
            f"{API_URL}/api/v1/payments/tbank/init",
            json=test_data,
            headers={"Content-Type": "application/json"}
        )
        
        print(f"üì° –°—Ç–∞—Ç—É—Å –æ—Ç–≤–µ—Ç–∞: {response.status_code}")
        print(f"üìÑ –ó–∞–≥–æ–ª–æ–≤–∫–∏: {dict(response.headers)}")
        
        if response.status_code == 200:
            result = response.json()
            print(f"‚úÖ –£—Å–ø–µ—à–Ω—ã–π –æ—Ç–≤–µ—Ç: {json.dumps(result, indent=2, ensure_ascii=False)}")
            return result
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞: {response.status_code}")
            print(f"üìÑ –û—Ç–≤–µ—Ç: {response.text}")
            return None
            
    except Exception as e:
        print(f"üí• –ò—Å–∫–ª—é—á–µ–Ω–∏–µ: {e}")
        return None

def test_direct_tbank():
    """–ü—Ä—è–º–æ–π —Ç–µ—Å—Ç T-Bank API"""
    print("\nüîó –ü—Ä—è–º–æ–π —Ç–µ—Å—Ç T-Bank API...")
    
    # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –¥–∞–Ω–Ω—ã–µ
    order_id = f"order_{int(time.time() * 1000)}_{uuid.uuid4().hex[:8]}"
    amount = 10000  # 100 —Ä—É–±–ª–µ–π –≤ –∫–æ–ø–µ–π–∫–∞—Ö
    
    # –ü–æ–¥–≥–æ—Ç–∞–≤–ª–∏–≤–∞–µ–º –¥–∞–Ω–Ω—ã–µ
    payment_data = {
        "TerminalKey": TBANK_TERMINAL,
        "Amount": amount,
        "OrderId": order_id,
        "Description": "–¢–µ—Å—Ç–æ–≤—ã–π –¥–æ–Ω–∞—Ç",
        "Language": "ru",
        "Frame": True,
        "DATA": {
            "connection_type": "Widget2.0"
        }
    }
    
    # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º —Ç–æ–∫–µ–Ω
    token_string = f"{payment_data['TerminalKey']}{payment_data['Amount']}{payment_data['OrderId']}{TBANK_SECRET_KEY}"
    token = hashlib.sha256(token_string.encode('utf-8')).hexdigest()
    payment_data["Token"] = token
    
    print(f"üîë –°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —Ç–æ–∫–µ–Ω: {token}")
    print(f"üì¶ –î–∞–Ω–Ω—ã–µ –∑–∞–ø—Ä–æ—Å–∞: {json.dumps(payment_data, indent=2, ensure_ascii=False)}")
    
    try:
        response = requests.post(
            "https://securepay.tinkoff.ru/v2/Init",
            json=payment_data,
            headers={"Content-Type": "application/json"}
        )
        
        print(f"üì° –°—Ç–∞—Ç—É—Å –æ—Ç–≤–µ—Ç–∞: {response.status_code}")
        
        if response.status_code == 200:
            result = response.json()
            print(f"‚úÖ –£—Å–ø–µ—à–Ω—ã–π –æ—Ç–≤–µ—Ç: {json.dumps(result, indent=2, ensure_ascii=False)}")
            return result
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞: {response.status_code}")
            print(f"üìÑ –û—Ç–≤–µ—Ç: {response.text}")
            return None
            
    except Exception as e:
        print(f"üí• –ò—Å–∫–ª—é—á–µ–Ω–∏–µ: {e}")
        return None

def main():
    print("üöÄ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤ T-Bank –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏")
    print("=" * 50)
    
    # –¢–µ—Å—Ç 1: –ù–∞—à API
    result1 = test_tbank_init()
    
    print("\n" + "=" * 50)
    
    # –¢–µ—Å—Ç 2: –ü—Ä—è–º–æ–π API
    result2 = test_direct_tbank()
    
    print("\n" + "=" * 50)
    print("üìä –†–µ–∑—É–ª—å—Ç–∞—Ç—ã —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è:")
    
    if result1:
        print("‚úÖ –ù–∞—à API —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ")
    else:
        print("‚ùå –ù–∞—à API –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç")
        
    if result2:
        print("‚úÖ –ü—Ä—è–º–æ–π T-Bank API —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ")
    else:
        print("‚ùå –ü—Ä—è–º–æ–π T-Bank API –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç")

if __name__ == "__main__":
    main() 